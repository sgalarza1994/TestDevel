// <auto-generated />
using System;
using Acme.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Acme.Migrations
{
    [DbContext(typeof(EncuentaDb))]
    [Migration("20220402004944_inicial")]
    partial class inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.14")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Acme.Model.Encuesta", b =>
                {
                    b.Property<int>("EncuestaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("varchar(500)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EncuestaId");

                    b.ToTable("Encuestas");
                });

            modelBuilder.Entity("Acme.Model.EncuestaDetalle", b =>
                {
                    b.Property<int>("EncuestaDetalleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EncuestaId")
                        .HasColumnType("int");

                    b.Property<string>("NombreCampo")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Requerido")
                        .HasColumnType("varchar(1)");

                    b.Property<string>("TipoCampo")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("TituloCampo")
                        .HasColumnType("varchar(200)");

                    b.HasKey("EncuestaDetalleId");

                    b.HasIndex("EncuestaId");

                    b.ToTable("EncuestaDetalles");
                });

            modelBuilder.Entity("Acme.Model.EncuestaRepuesta", b =>
                {
                    b.Property<int>("EncuestaRespuestaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EncuestaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.HasKey("EncuestaRespuestaId");

                    b.HasIndex("EncuestaId");

                    b.ToTable("EncuestaRepuestas");
                });

            modelBuilder.Entity("Acme.Model.EncuestaRespuestaDetalle", b =>
                {
                    b.Property<int>("EncuestaRespuestaDetalleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CampoId")
                        .HasColumnType("int");

                    b.Property<int>("EncuestaRepuestaId")
                        .HasColumnType("int");

                    b.Property<string>("Respuesta")
                        .HasColumnType("varchar(500)");

                    b.HasKey("EncuestaRespuestaDetalleId");

                    b.HasIndex("CampoId");

                    b.HasIndex("EncuestaRepuestaId");

                    b.ToTable("EncuestaRespuestaDetalles");
                });

            modelBuilder.Entity("Acme.Model.EncuestaDetalle", b =>
                {
                    b.HasOne("Acme.Model.Encuesta", "Encuesta")
                        .WithMany("Items")
                        .HasForeignKey("EncuestaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Encuesta");
                });

            modelBuilder.Entity("Acme.Model.EncuestaRepuesta", b =>
                {
                    b.HasOne("Acme.Model.Encuesta", "Encuesta")
                        .WithMany()
                        .HasForeignKey("EncuestaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Encuesta");
                });

            modelBuilder.Entity("Acme.Model.EncuestaRespuestaDetalle", b =>
                {
                    b.HasOne("Acme.Model.EncuestaDetalle", "Campo")
                        .WithMany()
                        .HasForeignKey("CampoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Acme.Model.EncuestaRepuesta", "EncuestaRepuesta")
                        .WithMany("Items")
                        .HasForeignKey("EncuestaRepuestaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campo");

                    b.Navigation("EncuestaRepuesta");
                });

            modelBuilder.Entity("Acme.Model.Encuesta", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("Acme.Model.EncuestaRepuesta", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
